<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">

    <changeSet id="drop db structure" author="ace">
        <sql>
            drop table if exists RC_EVENT_MEMBER cascade;
            drop table if exists RC_EVENT cascade;
            drop table if exists RC_MESSAGE cascade;
            drop table if exists RC_GROUP_MEMBER cascade;
            drop table if exists RC_GROUP cascade;
            drop table if exists RC_MEMBER cascade;
            drop table if exists RC_ROLE cascade;
            drop table if exists RC_SCHOOL cascade;
            drop table if exists RC_NOTICE cascade;    <!-- Объявления -->
            drop table if exists RC_NOTICE_TYPE;       <!-- Тип объявления -->

            drop sequence if exists RC_SCHOOL_SEQ;
            drop sequence if exists RC_GROUP_SEQ;
            drop sequence if exists RC_MEMBER_SEQ;
            drop sequence if exists RC_ROLE_SEQ;
            drop sequence if exists RC_GROUP_MEMBER_SEQ;
            drop sequence if exists RC_MESSAGE_SEQ;
            drop sequence if exists RC_EVENT_SEQ;
            drop sequence if exists RC_EVENT_MEMBER_SEQ;
            drop sequence if exists RC_NOTICE_SEQ;
        </sql>
    </changeSet>
    <changeSet id="create db structure" author="ace">
        <sql>
            create table RC_SCHOOL
            (
            SCHOOL_ID int primary key,
            SCHOOL_NAME varchar(255)
            );
            create sequence RC_SCHOOL_SEQ;

            create table RC_GROUP
            (
            GROUP_ID int primary key,
            SCHOOL_ID int not null,
            GROUP_TYPE varchar(50),
            GROUP_NAME varchar(100),
            GROUP_DESC varchar(8000),
            IS_ENABLED boolean
            );
            create sequence RC_GROUP_SEQ;

            create table RC_MEMBER
            (
            MEMBER_ID int primary key,
            ANNOTATION varchar(400),
            ACTUAL_DATE timestamp,
            FIRST_NAME varchar(100),
            MIDDLE_NAME varchar(100),
            LAST_NAME varchar(100),
            PHONE varchar(50),
            PHONE2 varchar(50),
            ADDRESS varchar(255),
            EMAIL varchar(100) NOT NULL UNIQUE,
            SKYPE varchar(50),
            VK varchar(50),
            OK varchar(50),
            TWIT varchar(100),
            PASSWORD char(144) NOT NULL
            );
            create sequence RC_MEMBER_SEQ;

            create table RC_ROLE
            (
            ROLE_ID int primary key,
            ROLE_NAME varchar(100)
            );
            create sequence RC_ROLE_SEQ;

            create table RC_GROUP_MEMBER
            (
            GROUP_MEMBER_ID int primary key,
            GROUP_ID int,
            MEMBER_ID int,
            ROLE_ID int,
            IS_ENABLED boolean,
            IS_NOTIFY boolean
            );
            create sequence RC_GROUP_MEMBER_SEQ;

            create table RC_MESSAGE
            (
            MESSAGE_ID int primary key,
            FROM_MEMBER_ID int,
            TO_MEMBER_ID int,
            TO_GROUP_ID int,
            MESSAGE_TYPE varchar(100),
            MESSAGE varchar(8000),
            MESSAGE_TIME timestamp default current_timestamp,
            MESSAGE_STATUS varchar(20)
            );
            create sequence RC_MESSAGE_SEQ;
        </sql>
    </changeSet>
    <changeSet id="create db structure additions" author="nikita">
        <sql>
            CREATE TABLE RC_EVENT
            (
            event_id int PRIMARY KEY,
            school_id int,
            event_type varchar(100),
            event_name varchar(100),
            event_desc varchar(8000),
            event_time timestamp,
            event_status varchar(20)
            );
            create sequence RC_EVENT_SEQ;

            CREATE TABLE RC_EVENT_MEMBER
            (
            event_member_id int primary key,
            event_id int,
            member_id int,
            role_id int,
            is_enabled boolean,
            is_notify boolean,
            choice varchar(100)
            );
            create sequence RC_EVENT_MEMBER_SEQ;
        </sql>
    </changeSet>
    <changeSet id="create db structure adding tables for notice" author="Alexandra">
        <sql>
            CREATE TABLE RC_NOTICE_TYPE
            (
            id int primary key,
            name varchar(100)
            );

            CREATE TABLE RC_NOTICE
            (
            id int primary key,
            school_id int,
            type_id int,
            date timestamp,
            text varchar(8000),
            agenda varchar(8000)
            );
            create sequence RC_NOTICE_SEQ
        </sql>
    </changeSet>
    <changeSet id="add constraints" author="Trokhin">
        <sql>
            ALTER TABLE RC_GROUP
            ADD CONSTRAINT fk_group_school
            FOREIGN KEY(SCHOOL_ID) REFERENCES RC_SCHOOL ON DELETE CASCADE;

            ALTER TABLE RC_GROUP_MEMBER
            ADD CONSTRAINT fk_group_member_group
            FOREIGN KEY(GROUP_ID) REFERENCES RC_GROUP ON DELETE CASCADE;

            ALTER TABLE RC_GROUP_MEMBER
            ADD CONSTRAINT fk_group_member_member
            FOREIGN KEY(MEMBER_ID) REFERENCES RC_MEMBER ON DELETE CASCADE;

            ALTER TABLE RC_GROUP_MEMBER
            ADD CONSTRAINT fk_group_member_role
            FOREIGN KEY(ROLE_ID) REFERENCES RC_ROLE ON DELETE CASCADE;


            ALTER TABLE RC_EVENT
            ADD CONSTRAINT fk_event_school
            FOREIGN KEY(SCHOOL_ID) REFERENCES RC_SCHOOL ON DELETE CASCADE;

            ALTER TABLE RC_EVENT_MEMBER
            ADD CONSTRAINT fk_event_member_event
            FOREIGN KEY(EVENT_ID) REFERENCES RC_EVENT ON DELETE CASCADE;

            ALTER TABLE RC_EVENT_MEMBER
            ADD CONSTRAINT fk_event_member_member
            FOREIGN KEY(MEMBER_ID) REFERENCES RC_MEMBER ON DELETE CASCADE;

            ALTER TABLE RC_EVENT_MEMBER
            ADD CONSTRAINT fk_event_member_role
            FOREIGN KEY(ROLE_ID) REFERENCES RC_ROLE ON DELETE CASCADE;

            ALTER TABLE RC_NOTICE
            ADD CONSTRAINT fk_notice_school
            FOREIGN KEY(SCHOOL_ID) REFERENCES RC_SCHOOL ON DELETE CASCADE;

            ALTER TABLE RC_NOTICE
            ADD CONSTRAINT fk_notice_type
            FOREIGN KEY(TYPE_ID) REFERENCES RC_NOTICE_TYPE ON DELETE CASCADE;
        </sql>
    </changeSet>
    <changeSet id="test data" author="ace">
        <sql>
            insert into RC_MEMBER(MEMBER_ID, ANNOTATION, ACTUAL_DATE, FIRST_NAME, 
                                  MIDDLE_NAME, LAST_NAME, PHONE, PHONE2, ADDRESS, 
                                  EMAIL, SKYPE, VK, OK, TWIT, PASSWORD) values
            (NEXTVAL('RC_MEMBER_SEQ'), 'System administrator', now(), NULL, NULL, NULL, NULL, NULL, NULL,
             'admin@relex.ru', NULL, NULL, NULL, NULL,
            '2ae3b0e976b2f8727df5fff3e3d9c2e63ae450289b4108e6db9a8069e5dc9f10791794270b16f1f72960ce4d9964dcd4cbd7a0fea0973408856268502da402055966681c4b3b76aa');

            insert into RC_SCHOOL(SCHOOL_ID, SCHOOL_NAME) values
            (1, 'School 1');

            insert into RC_GROUP(GROUP_ID, GROUP_DESC, GROUP_NAME, GROUP_TYPE,
                                 IS_ENABLED, SCHOOL_ID) values
            (1, 'Group administrator', 'ADMIN', NULL, TRUE, 1);
        </sql>
    </changeSet>
</databaseChangeLog>
